{"ast":null,"code":"import _objectSpread from \"/Users/sarmiene/Skillcrush/react-JS/super-sticky-notes-reactJS/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/Users/sarmiene/Skillcrush/react-JS/super-sticky-notes-reactJS/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./header.js\";\nimport \"./index.css\";\nimport NoteList from \"./notelist\"; // this is the main compoent of that file\n\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState(() => {\n    const savedNotes = localStorage.getItem(\"notes\");\n    return savedNotes ? JSON.parse(savedNotes) : [];\n  });\n  const [searchText, setSearchText] = useState(\"\");\n  useEffect(() => {\n    // Save notes to localStorage whenever they change\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n  const addNote = () => {\n    const newNote = {\n      id: Date.now(),\n      title: \"\",\n      description: \"\",\n      doesMatchSearch: true\n    };\n    setNotes([newNote, ...notes]);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    addNote: addNote // placeholder\n    ,\n    searchText: searchText // passes current search text state to header\n    ,\n    onSearch: text => setSearchText(text),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(NoteList, {\n    notes: notes // this pases the current notes state vlue\n    ,\n    searchText: searchText // Again it is the current value, and it will be used to filter.\n    ,\n    removeNote: id => setNotes(notes.filter(note => note.id !== id)),\n    onType: (id, key, value) => setNotes(notes.map(note =>\n    // line below is a ternary operator. the []: part will change the value of either the title or descrpition property. other wise note stays unchanged in the new array being made. \n    note.id === id ? _objectSpread(_objectSpread({}, note), {}, {\n      [key]: value\n    }) : note)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }));\n};\n_s(App, \"C7kQ4M9tp0zRwm9QizIpzUSsLIQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","NoteList","App","_s","notes","setNotes","savedNotes","localStorage","getItem","JSON","parse","searchText","setSearchText","setItem","stringify","addNote","newNote","id","Date","now","title","description","doesMatchSearch","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","text","removeNote","filter","note","onType","key","value","map","_objectSpread","_c","$RefreshReg$"],"sources":["/Users/sarmiene/Skillcrush/react-JS/super-sticky-notes-reactJS/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Header from \"./header.js\";\nimport \"./index.css\";\nimport NoteList from \"./notelist\"; // this is the main compoent of that file\n\nconst App = () => {\n  const [notes, setNotes] = useState(() => {\n    const savedNotes = localStorage.getItem(\"notes\");\n    return savedNotes ? JSON.parse(savedNotes) : [];\n  });\n\n  const [searchText, setSearchText] = useState(\"\");\n\n  useEffect(() => {\n    // Save notes to localStorage whenever they change\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n  \n\n  const addNote = () => {\n    const newNote = {\n      id: Date.now(),\n      title: \"\",\n      description: \"\",\n      doesMatchSearch: true,\n    };\n    setNotes([newNote, ...notes]);\n  };\n\n  return(\n    <div>\n    <Header\n    addNote={addNote} // placeholder\n    searchText={searchText} // passes current search text state to header\n    onSearch={(text) => setSearchText(text)}\n    />\n    <NoteList\n      notes={notes} // this pases the current notes state vlue\n      searchText={searchText} // Again it is the current value, and it will be used to filter.\n      removeNote={(id) => setNotes(notes.filter((note) => note.id !== id))}\n      onType={(id, key, value) => \n        setNotes(\n          notes.map((note) => // line below is a ternary operator. the []: part will change the value of either the title or descrpition property. other wise note stays unchanged in the new array being made. \n              note.id === id ? {...note, [key]: value} : note\n          )\n        )\n      }\n    />\n    </div>\n  )\n};\n\nexport default App\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAO,aAAa;AACpB,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAC;;AAEnC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,MAAM;IACvC,MAAMQ,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,OAAOF,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,EAAE;EACjD,CAAC,CAAC;EAEF,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACAQ,YAAY,CAACM,OAAO,CAAC,OAAO,EAAEJ,IAAI,CAACK,SAAS,CAACV,KAAK,CAAC,CAAC;EACtD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAGX,MAAMW,OAAO,GAAGA,CAAA,KAAM;IACpB,MAAMC,OAAO,GAAG;MACdC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,eAAe,EAAE;IACnB,CAAC;IACDjB,QAAQ,CAAC,CAACW,OAAO,EAAE,GAAGZ,KAAK,CAAC,CAAC;EAC/B,CAAC;EAED,oBACEP,KAAA,CAAA0B,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACAhC,KAAA,CAAA0B,aAAA,CAACvB,MAAM;IACPe,OAAO,EAAEA,OAAQ,CAAC;IAAA;IAClBJ,UAAU,EAAEA,UAAW,CAAC;IAAA;IACxBmB,QAAQ,EAAGC,IAAI,IAAKnB,aAAa,CAACmB,IAAI,CAAE;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACvC,CAAC,eACFhC,KAAA,CAAA0B,aAAA,CAACtB,QAAQ;IACPG,KAAK,EAAEA,KAAM,CAAC;IAAA;IACdO,UAAU,EAAEA,UAAW,CAAC;IAAA;IACxBqB,UAAU,EAAGf,EAAE,IAAKZ,QAAQ,CAACD,KAAK,CAAC6B,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACjB,EAAE,KAAKA,EAAE,CAAC,CAAE;IACrEkB,MAAM,EAAEA,CAAClB,EAAE,EAAEmB,GAAG,EAAEC,KAAK,KACrBhC,QAAQ,CACND,KAAK,CAACkC,GAAG,CAAEJ,IAAI;IAAK;IAChBA,IAAI,CAACjB,EAAE,KAAKA,EAAE,GAAAsB,aAAA,CAAAA,aAAA,KAAOL,IAAI;MAAE,CAACE,GAAG,GAAGC;IAAK,KAAIH,IAC/C,CACF,CACD;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACF,CACI,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA7CID,GAAG;AAAAsC,EAAA,GAAHtC,GAAG;AA+CT,eAAeA,GAAG;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}