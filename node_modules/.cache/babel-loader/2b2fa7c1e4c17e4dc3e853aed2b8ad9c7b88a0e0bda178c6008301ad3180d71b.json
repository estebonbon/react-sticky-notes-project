{"ast":null,"code":"var _jsxFileName = \"/Users/sarmiene/Skillcrush/react-JS/super-sticky-notes-reactJS/src/notelist.js\";\nimport React from \"react\";\nimport Note from \"./note\";\nconst NoteList = props => {\n  const filteredNotes = props.notes.filter(note => note.title.toLowerCase().includes(props.searchText.toLowerCase()));\n  // There is alot going on. First props is passed from app.js, props has a notes object. \n  // 1) each note is converted to lowercase, then compared to the lowercase for the text in the (search text)\n  // Filtered notes is the only notes that satisfy the requirement. \n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"notes-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }\n  }, filteredNotes.map(note => /*#__PURE__*/React.createElement(Note /* this renders a note component for each note */, {\n    key: note.id,\n    note: note,\n    onType: props.onType,\n    removeNote: props.removeNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  })));\n};\n_c = NoteList;\nexport default NoteList;\nvar _c;\n$RefreshReg$(_c, \"NoteList\");","map":{"version":3,"names":["React","Note","NoteList","props","filteredNotes","notes","filter","note","title","toLowerCase","includes","searchText","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","key","id","onType","removeNote","_c","$RefreshReg$"],"sources":["/Users/sarmiene/Skillcrush/react-JS/super-sticky-notes-reactJS/src/notelist.js"],"sourcesContent":["import React from \"react\";\nimport Note from \"./note\";\n\nconst NoteList = (props) => {\n\n  const filteredNotes = props.notes.filter((note) => note.title.toLowerCase().includes(props.searchText.toLowerCase()));\n  // There is alot going on. First props is passed from app.js, props has a notes object. \n  // 1) each note is converted to lowercase, then compared to the lowercase for the text in the (search text)\n  // Filtered notes is the only notes that satisfy the requirement. \n\n\n  return <ul className=\"notes-list\">{filteredNotes.map((note) => (\n    <Note /* this renders a note component for each note */\n    key={note.id}\n    note={note}\n    onType={props.onType}\n    removeNote={props.removeNote}\n  />\n  ))}</ul>;\n};\n\nexport default NoteList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAEzB,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAE1B,MAAMC,aAAa,GAAGD,KAAK,CAACE,KAAK,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,KAAK,CAACQ,UAAU,CAACF,WAAW,CAAC,CAAC,CAAC,CAAC;EACrH;EACA;EACA;;EAGA,oBAAOT,KAAA,CAAAY,aAAA;IAAIC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEf,aAAa,CAACgB,GAAG,CAAEb,IAAI,iBACxDP,KAAA,CAAAY,aAAA,CAACX,IAAI,CAAC;IACNoB,GAAG,EAAEd,IAAI,CAACe,EAAG;IACbf,IAAI,EAAEA,IAAK;IACXgB,MAAM,EAAEpB,KAAK,CAACoB,MAAO;IACrBC,UAAU,EAAErB,KAAK,CAACqB,UAAW;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC9B,CACA,CAAM,CAAC;AACV,CAAC;AAACM,EAAA,GAhBIvB,QAAQ;AAkBd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}